services:
  permission-manager-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${PM_DB_NAME}
      POSTGRES_USER: ${PM_DB_USER}
      POSTGRES_PASSWORD: ${PM_DB_PASSWORD}
    volumes:
      - permission_data:/var/lib/postgresql/data
    networks:
      - app-network

  snippet-manager-db:
    image: postgres
    ports:
      - "5431:5432"
    environment:
      POSTGRES_DB: ${SM_DB_NAME}
      POSTGRES_USER: ${SM_DB_USER}
      POSTGRES_PASSWORD: ${SM_DB_PASSWORD}
    volumes:
      - snippet_data:/var/lib/postgresql/data
    networks:
      - app-network

  asset-service:
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  snippet-manager:
    image: ghcr.io/ingsis15/snippet-manager:latest
    environment:
      SERVER_PORT: 8080
      DB_PORT: 5432
      DB_HOST: snippet-manager-db
      DB_USERNAME: ${SM_DB_USER}
      DB_PASSWORD: ${SM_DB_PASSWORD}
      DB_NAME: ${SM_DB_NAME}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      PRINTSCRIPT_HOST: http://printscript-service:8080
      ASSET_HOST: http://asset-service:8080
      NEW_RELIC_LICENSE_KEY: ${SM_NEWRELIC}
    depends_on:
      - snippet-manager-db
      - asset-service
    networks:
      - app-network

  permission-manager:
    image: ghcr.io/ingsis15/permission-manager:latest
    environment:
      SERVER_PORT: 8080
      DB_PORT: 5432
      DB_HOST: permission-manager-db
      DB_USERNAME: ${PM_DB_USER}
      DB_PASSWORD: ${PM_DB_PASSWORD}
      DB_NAME: ${PM_DB_NAME}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      NEW_RELIC_LICENSE_KEY: ${PM_NEWRELIC}
    depends_on:
      - permission-manager-db
    networks:
      - app-network

  printscript-service:
    image: ghcr.io/ingsis15/printscript-service:latest
    environment:
      SERVER_PORT: 8080
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      SNIPPETMANAGER_HOST: http://snippet-manager:8080
      NEW_RELIC_LICENSE_KEY: ${PS_NEWRELIC}
    networks:
      - app-network

  printscript-ui:
    image: ghcr.io/ingsis15/printscript-ui:latest
    networks:
      - app-network

  proxy:
    container_name: "reverse-proxy"
    image: nginx
    depends_on:
      - snippet-manager
      - printscript-service
      - permission-manager
      - printscript-ui
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf.d/:/etc/nginx/conf.d/:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt

volumes:
  permission_data:
  snippet_data:
  print_data:
  blob:
    external: false

networks:
  app-network:
    driver: bridge
